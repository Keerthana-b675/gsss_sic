ASSIGNMENTS:

DAY1:
Conditional Programming:
Tax Calculation problem.
Farmer problem.
* Student result problem
* Check if a number is Perfect Square
Check if a year is Leap year

DAY2:
Problems on Loops:
* implement range function
Accept the number of lines of the Shape and draw the following shapes:
	1. X shape
	2. Hollow square
	3. X inside hollow square
	4. Pascal Triangle
	5. Rhombus
Accept a number and implement following programs:
	1. Find sum of Even placed digits
	2. Find sum of Odd placed Even digits in the number
	3. Find 2nd smallest digit in the number.
	4. Find 2nd biggest digit and also check if 2nd biggest digit is not possible to be found.
	5. Find sum of composite digits of the number.
-------------------------------------
Taxation Problem:

Tax Calculator Problem
GlobalNext Solutions, a rapidly growing IT company, employs a diverse workforce ranging from entry-
level developers to senior executives. The HR department wants to streamline the tax calculation
process for employees under the New Tax Regime (2023). They’ve decided to build a tax calculation
program that computes salaries, taxes, and net incomes while ensuring compliance with the latest tax
laws.
As a software developer in GlobalNext’s HR-Tech team, you are tasked with developing this program.
The system should process employee salary details, validate inputs, calculate taxes, and generate
detailed reports.
The program should:
1. Accept employee details, including monthly salary components.
2. Calculate gross and taxable income according to the New Tax Regime (2023).
3. Compute the tax payable using the appropriate tax slabs.
4. Apply any applicable standard deductions and rebates.
5. Generate reports detailing gross salary, taxable income, tax payable, and net salary.
Level 1: Basic Input and Salary Calculation
Objective: Capture employee details and calculate the gross salary.
Tasks:
• Accept the following inputs for an employee:
o Name
o EmpID
o Basic Monthly Salary
o Special Allowances (Monthly)
o Bonus Percentage (Annual Bonus as % of Monthly Gross Salary)
• Calculate:
o Gross Monthly Salary = Basic Salary + Special Allowances
o Annual Gross Salary = (Gross Monthly Salary × 12) + Bonus
• Output:
o Display the employee details, gross monthly salary, and annual gross salary.

Level2:
Level 2: Taxable Income Calculation
Objective: Calculate taxable income after standard deductions.
Tasks:
• Deduct a Standard Deduction of ₹50,000 from the annual gross salary.
• Compute the Taxable Income and display all intermediate calculations.
Output: Display gross salary, standard deduction and taxable income.

Level 3: Tax and Rebate Calculation
Objective: Compute tax payable using the New Tax Regime (2023) slabs.
Tasks:
1. Calculate tax based on the following slabs:
o ₹0 - ₹3,00,000: 0%
o ₹3,00,001 - ₹6,00,000: 5%
o ₹6,00,001 - ₹9,00,000: 10%
o ₹9,00,001 - ₹12,00,000: 15%
o ₹12,00,001 - ₹15,00,000: 20%
o Above ₹15,00,000: 30%
2. Apply Section 87A Rebate:
o Taxable income ≤ ₹7,00,000 → 100% rebate (tax payable = ₹0).
3. Add a 4% Health and Education Cess to the calculated tax.
Output:
• Display a detailed tax breakdown, including slabs, cess, and total tax payable.
----------------------------------------
Level 4: Net Salary Calculation
Objective: Calculate annual net salary after tax deductions.
Tasks:
1. Compute Net Salary = Annual Gross Salary - Total Tax Payable.
2. Display:
o Annual Gross Salary
o Total Tax Payable (including cess)
o Annual Net Salary
--------------------
Level 5: Report Generation
Objective: Generate a detailed report for employees.
Tasks:
1. Summarize all computed details:
o Employee Details (Name, EmpID)
o Gross Monthly Salary
o Annual Gross Salary
o Taxable Income
o Tax Payable (with breakdown)
o Annual Net Salary
2. Format the output as a report for better readability.
----------------------------------
Level 6: Input Validation Rules
Objective: Validate all inputs to ensure accuracy and correctness.
Validation Rules:
1. Employee Details:
o Name: Non-empty, alphabets only, max 50 characters.
o EmpID: Alphanumeric, 5–10 characters.
2. Salary Inputs:
o Basic Salary: Positive number, max ₹1,00,00,000.
o Special Allowances: Non-negative, max ₹1,00,00,000.
o Bonus Percentage: Numeric value, 0–100.
3. Derived Calculations:
o Gross Monthly Salary must be greater than zero.
o Annual Gross Salary should not exceed realistic values.
4. General:
o Reject invalid inputs with a clear error message.
o Provide re-entry prompts for invalid data.
-------------------------------------------------------
Farmer Problem Statement
Mahesh is a farmer and owns 80 acres of land. His land is equally divided into 5 segments.
He grows tomatoes in the 1st segment, potatoes in the 2nd segment, cabbage in the 3rd segment, sunflower in the 4th segment and sugarcane in the 5th segment.
He is converting his land from chemical-driven farming to chemical-free farming. Mahesh starts with the conversion of vegetables into chemical-free produce. He spends the first 6 months doing the same.
He then converts the sunflower land bank into chemical-free farming. This takes him another 4 months. Finally, he converts sugarcane into chemical-free farming over the next 4 months.
He gets a yield of the following for tomatoes. 30% of his tomato land gives him 10 tonne yield per acre.
The remaining 70% of his tomato land gives him 12 tonnes yield per acre. The selling price of tomato
is Rs. 7 per Kg.
The yield of potatoes is 10 tonnes per acre. He sells each kg at Rs. 20.
The yield of cabbage is 14 tonnes per acre. He sells each kg at Rs. 24.
The yield of sunflowers is 0.7 tonnes per acre. He sells each kg at Rs. 200.
The yield of sugarcane is 45 tonnes per acre. He sells each tonne at Rs. 4,000.
All the crops are sowed at the same time. Mahesh gets the above yield at the above-mentioned rate
in one crop cycle across his entire land of 80 acres.
What is
a. The overall sales achieved by Mahesh from the 80 acres of land.


Doubts: dev.morzilla.org--html,javascript, docs.oracle.com-java, pythonic.docs.com -python, c,c++ - ibm,microsoft
-----> Learn output formatting in taxation problem 
----->why in pytrhon we dont have incfement and decrement operators.
----->learn about __main__
-----> what is pep3 and pythonic
-----> can we modify the list which is element of tuple
-----> passing command line arguments in my range function
-----> why argv stores file name in python , but not in java
-----> why in python there is no implict type casting , as in java we can add a string with int which excplictly converts int into string 
--->applications vs software
-----> 

# research 
floating point numbers are stored using IEEE standards.
in relational operator using two operator we can construct others.so we need to find out 2 required operator//< and ==
ordering mutiple items at a time:restaurant.py

Inheritance:class A is fully developed package and that is inherited for class B
Polymorphism:one problem multiple solutions
when we inherit the existing solution with even more new features:inheritance
bad inheritance:adding more features than required
why inheritance:
you can sell diff product to diff customer
Association:
the  whole object and part object cannot exist independent of each other 
eg:pen and cap,mobile and battery
Aggregation:the  whole object and part object can exist independent of each other 
ex:music system and car
input() = is a function from core python library and it reads and returns it as a string alternatively we can pass srting to it and print it in the console.
Dr Subramaniam Swamy
diff between scanf and gets ,printf and puts
until i give some specified symbol it should take input from me : do this in python sir is already done in c
address of first element ,addresss of first byte of first element both are same==>1201
address of last element==>1237,address of last byte of last element==>1240
address:size of the data type property
address-address:numbers===>number is number of bytes between the elements
address-numbers:address
address+numbers:address
(linked list : we never see wastage )===>learn about this,,time effeciancy : O(n)
list methods:definition(learn) (append,extends see list3.py)
__repr__ important... just type list1.         you will get all the methods.
why there is no IndexError in the case of Slicing
implement a function find which mimics the find method of string class
why *args?
my_find_str.py: other 2 condition start index and end index
